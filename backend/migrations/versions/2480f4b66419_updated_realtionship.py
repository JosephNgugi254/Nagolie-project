"""updated realtionship

Revision ID: 2480f4b66419
Revises: 5c71dee2b9c8
Create Date: 2025-10-09 20:45:00.000000

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '2480f4b66419'
down_revision = '5c71dee2b9c8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Use batch alter for PostgreSQL
    with op.batch_alter_table('transactions', schema=None) as batch_op:
        # Add new columns as nullable first
        batch_op.add_column(sa.Column('transaction_type', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('payment_method', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('mpesa_receipt', sa.String(length=50), nullable=True))
    
    # Copy data from old columns to new ones
    conn = op.get_bind()
    conn.execute(sa.text("UPDATE transactions SET transaction_type = type WHERE type IS NOT NULL"))
    conn.execute(sa.text("UPDATE transactions SET payment_method = method WHERE method IS NOT NULL"))
    conn.execute(sa.text("UPDATE transactions SET mpesa_receipt = mpesa_reference WHERE mpesa_reference IS NOT NULL"))
    
    # Set defaults for any nulls
    conn.execute(sa.text("UPDATE transactions SET transaction_type = 'payment' WHERE transaction_type IS NULL"))
    conn.execute(sa.text("UPDATE transactions SET payment_method = 'cash' WHERE payment_method IS NULL"))
    
    # Now make NOT NULL
    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.alter_column('transaction_type', nullable=False)
        batch_op.alter_column('payment_method', nullable=False)
    
    # Change amount type from Float (DOUBLE_PRECISION) to Numeric
    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.alter_column('amount',
                              existing_type=sa.Float(precision=53),
                              type_=sa.Numeric(precision=10, scale=2),
                              existing_nullable=False)
    
    # Drop old columns
    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.drop_column('type')
        batch_op.drop_column('method')
    
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Add back old columns
    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('method', sa.String(length=20), nullable=False))
        batch_op.add_column(sa.Column('type', sa.String(length=20), nullable=False))
    
    # Copy data back
    conn = op.get_bind()
    conn.execute(sa.text("UPDATE transactions SET type = transaction_type"))
    conn.execute(sa.text("UPDATE transactions SET method = payment_method"))
    
    # Drop new columns
    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.drop_column('mpesa_receipt')
        batch_op.drop_column('payment_method')
        batch_op.drop_column('transaction_type')
    
    # Revert amount type
    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.alter_column('amount',
                              existing_type=sa.Numeric(precision=10, scale=2),
                              type_=sa.Float(precision=53),
                              existing_nullable=False)
    
    # ### end Alembic commands ###